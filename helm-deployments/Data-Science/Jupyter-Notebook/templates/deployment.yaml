apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-jupyter
  labels:
    app: {{ template "jupyter.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "jupyter.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      containers:
        - name: jupyter
          image: {{ .Values.jupyter.image }}:{{ .Values.jupyter.imageTag }}
          imagePullPolicy: {{ .Values.jupyter.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port}}
              name: jupyterport
          env:
            - name: "JUPYTERPWD"
              valueFrom:
                    secretKeyRef:
                      name: jupyter-{{ .Release.Name }}-password-secret
                      key: password
          resources:
{{ toYaml .Values.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port}}
            initialDelaySeconds: 20
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /home/jovyan/work
              name: data-jupyter
      securityContext:
        fsGroup: {{ .Values.securityContext.fsgroup }}
      volumes:
        - name: data-jupyter
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-jupyter
