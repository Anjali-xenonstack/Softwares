apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-jupyter
  labels:
    app: {{ template "jupyter.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    type: softwares
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "jupyter.name" . }}
        release: {{ .Release.Name }}
        type: softwares
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      containers:
        - name: jupyter
          image: {{ .Values.jupyter.image }}
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8888
              name: jupyterport
          env:
          - name: jupyter_password
            value: {{ .Values.jupyter.password }}
          - name: BUCKET_NAME
            value: {{ .Values.BUCKET_NAME }}
          - name: WORK_DIR_NAME
            value: {{ .Values.WORK_DIR_NAME }}
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.AWS_ACCESS_KEY }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.AWS_ACCESS_SECRET }}
          volumeMounts:
            - mountPath: /home/jovyan/work
              name: data-jupyter
          resources:
{{ toYaml .Values.jupyter.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: {{ .Values.jupyter.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.jupyter.timeoutSeconds }}
      # nodeSelector:
      #   kops.k8s.io/instancegroup: nodes
      volumes:
        - name: data-jupyter
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-jupyter
