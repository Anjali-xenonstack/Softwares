jupyter:
  image: dr.xenon.team/public_utils/nl-jupyter-notebook
  tag: python-3.8.8 #1
  password: "akira"
  resources:
    limits:
      memory: "2048Mi"
      cpu: "2000m"
    requests:
      memory: "300Mi"
      cpu: "300m"
  initialDelaySeconds: 15
  timeoutSeconds: 1

workspace_id: nl-123
user_id: 123
user_name: neuronlabs

labels:
  app.kubernetes.io/name: jupyter-lab
  app.kubernetes.io/version: "3.8.8"
  app.kubernetes.io/managed-by: helm
  app.kubernetes.io/contact: rajat
  app.kubernetes.io/requested-by: na
  app.kubernetes.io/env: prod
  app.kubernetes.io/tier: notebook
  app.kubernetes.io/project: neuronlabs

# AWS_ACCESS_KEY: ""
# AWS_ACCESS_SECRET: ""
# BUCKET_NAME: ""
# WORK_DIR_NAME: ""

selector:
  app.kubernetes.io/name: jupyter-lab
  app.kubernetes.io/version: "3.8.8"
  app.kubernetes.io/env: prod


persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## mongodb data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  accessMode: ReadWriteOnce
  size: 20Gi

ingress:
   enabled: true
   annotations:
     kubernetes.io/ingress.class: nginx
     nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
     nginx.ingress.kubernetes.io/ssl-redirect: "true"
   domainName: neuronlabs.stpi.in
   secretName: neurallabs-stpi-in
   path: /

service:
  port: 8888

auth:
  token: ""

env:
  jupyterEnableLab: yes
